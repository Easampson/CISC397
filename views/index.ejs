<!DOCTYPE html>
<html>
<%- include('shared/header')  %>
<body>

<!-- !PAGE CONTENT! -->
<div class="w3-main">

<!-- Bootstap row for view filtering -->
<div class="row">
  <div class="col-md-4 col-sm-4 col-lg-4">

    <div class="pull-right">
      <p id="usr"></p>
     <button class="btn btn-success" type="button" onclick="logout()">Logout</button>

    </div>
    <br>

    <!-- Header -->
    <div class="w3-container" id="showcase">
      <h1 class="w3-jumbo"><b>PA Historical Landmarks</b></h1>
      <h1 class="w3-xxxlarge w3-text-red"><b>Search</b></h1>
      <div class="admin-options">
      </div>
      <hr style="width:50px;border:5px solid red" class="w3-round">
    </div>


  <form class="form-horizontal">

    <!-- Name -->
    <div class="form-group">
       <label class="control-label col-sm-2" for="Name_Of_The_Marker">Name:</label>
       <div class="col-sm-10">
         <select class="select2" name="Name_Of_The_Marker" id="Name_Of_The_Marker" url="/NameOfMarkerList" >
        </select>
       </div>
     </div>

     <!-- County -->
     <div class="form-group">
        <label class="control-label col-sm-2" for="County"> County:</label>
        <div class="col-sm-10">
          <select class="select2" name="County" id="County" url="/CountyList">
         </select>
        </div>
      </div>

     <!-- Category -->
     <div class="form-group">
        <label class="control-label col-sm-2" for="Category"> Category:</label>
        <div class="col-sm-10">
          <select class="select2" name="Category" id="Category" url="/CategoryList">
         </select>
        </div>
      </div>

      <!-- Location Description -->
      <div class="form-group">
         <label class="control-label col-sm-2" for="Location_Description"> Location Description:</label>
         <div class="col-sm-10">
           <select class="select2" name="Location_Description" id="Location_Description" url="/LocationDescriptionList">
          </select>
         </div>
       </div>

     <div class="form-group">
       <div class="col-sm-offset-2 col-sm-10">
         <button type="button" class="btn btn-primary" onclick="onSubmit()">Submit</button>
       </div>
     </div>
  </form>
</div>

<div class="col-md-8 col-sm-8 col-lg-8">
    <div id="map"style="width:100%; height:100%"></div>
    <br>
</div>
  </div><!-- End of Row-->
 <hr>
<!-- Tagging -->
<div class="row">
  <div class="col-md-12 col-sm-12 col-lg-12">

    <div class="w3-container" style="margin-top:80px" id="showcase">
      <h1 class="w3-jumbo"><b>Tag Lists</b></h1>
      <div class="row">
      <div class="col-md-2 col-sm-2 col-lg-2">
        <select class="select2 taglists" id="usertaglists" url="/usertaglists" minimumResultsForSearch='Infinity' placeholder="Choose List">
        </select>
        <hr style="width:50px;border:5px solid red" class="w3-round"/>
      </div>
      <div class="col-md-10 col-sm-10 col-lg-10">
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addnewtaglistModal">Add New List</button>
        <button type="button" class="btn btn-success" onclick="return refreshTagListView();">Refresh List</button>
        <button type="button" class="btn btn-danger" onclick="return removeTagList();">Remove List</button>

         <div class="jumbotron" id="usertaglistview">
           <h3 >...Select a list to show markers that you've tagged...</h3>
       </div>
      </div>
    </div>

  </div>

  </div>
</div> <!-- End of tagging row -->


<!-- Liability Agreement -->
<div class="w3-modal" id="agreement">
  <div class="w3-modal-content w3-card">
    <header class="w3-container w3-sand">
      <h2>Disclaimer</h2>
    </header>
    <div class="w3-container">
      <p>The creators of this project (PA Historical Landmarks) hold no liability for loss or injury resulting from its use. This project utilizes the Google Maps APIs and is subject to its <a href="https://developers.google.com/maps/terms">Terms of Service</a>. In using this project you acknowledge to have agreed to use Google Services under their <a href="https://maps.google.com/help/terms_maps.html"> Additional Terms of Service </a> as well as assume risk for any adventures.</p>

      <button type="button" class="btn btn-danger w3-red" onclick=closeAgreement()>I agree</button>
    </div>
  </div>
</div>

<!-- End page content -->
</div>

<script>

  var map;
  var markers = [];
  var infowindows = [];
  var selectedmarker;

  function initMap() {
    if (document.getElementById('map')){

    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 39.952583, lng: -75.165222},
      zoom: 6
    });

  }
  }

  function addmarkers(item){
    var marker = new google.maps.Marker({
              position: {lat:parseFloat(item.Latitude),lng:parseFloat(item.Longitude)},
              map: map
            });

    if (isNaN(parseFloat(item.Latitude)) || isNaN(parseFloat(item.Longitude)) ){
      //alert('One or more data points do not have location assigned to it. Sorry !');
      // render results as text instead.
      return;
    }

    markers.push({ Title:item.Name_of_the_Marker, Description: item.Marker_Description,Marker:marker});
    marker.setMap(map);


    var contentString = '<div id="content">'+
            '<div id="markerInfo">'+
            '</div>'+
            '<h1 class="firstHeading">'+item.Name_of_the_Marker+'</h1>'+
            '<div id="bodyContent">'+
            '<p>'+item.Marker_Description+'</p>'+
            '<button type="button" class="btn btn-info" data-toggle="modal" data-target="#tagItemModal">Tag Item</button>'+
            '</div>'+
            '</div>';


    var infowindow = new google.maps.InfoWindow({
      content: contentString
    });

    marker.addListener('click', function() {
      infowindow.open(map, marker);
      selectedmarker = markers.filter(m => {return m.Marker === marker;})[0];
    });

    infowindows.push(infowindow);

  }

  function removemarkers(){
    for (var i = 0; i < markers.length; i++) {
     markers[i].Marker.setMap(null);
   }
    markers = [];
    infowindows = [];
  }

  function onSubmit(){

    // get form values
    let hid = $('#Name_Of_The_Marker').val();
    let cat = $('#Category').val();
    let cty = $('#County').val();
    let ld = $('#Location_Description').val();

    $.ajax({
          url: "/searchHistoryForMap",
          dataType:'json',
          data: {
            Historical_Marker_Id:hid,
            Category: cat,
            County: cty,
            Location_Description: ld,
            Username: getUsername()
          },
          type: 'POST',
          success: function (data){
            if ( data != '0'){
            removemarkers();
            data.forEach( (el) =>{
              addmarkers(el);

            });
          }
            else{
              alert("Sorry! You need to be logged in to search for information");
              window.location.assign(EnvironmentUrl+"/login");
            }
          }
  });
}
  // adding new lists and tags------------------------------------

  function addNewList(){

    var nameoflist = $('.newlistname').val();

    $.ajax({
      url: '/addnewuserlist',
      type: 'POST',
      dataType: 'json',
      data: {
          NameOfList: nameoflist,
          User: getUsername()
      },
      success: function(data){
        $('#addnewtaglistModal').modal('toggle');
        //window.location.assign(EnvironmentUrl);
      }
    });

  }

function addmarkertolist(){
  var _listname = $('#addtousertaglist').val();
if (_listname != null){
  $.ajax({
    url: '/addmarkertolist',
    type: 'POST',
    dataType: 'json',
    data: {
        Title: selectedmarker.Title,
        Description: selectedmarker.Description,
        User: getUsername(),
        ListName:_listname
    },
    success: function(){
      $('#tagItemModal').modal('toggle');
    }
  });
}
}


// removing item from a list --------------------------------
function removeitemfromlist(){

  let listname = $('#tagitemremovebutton').attr('item-name');
  if (_listname != null){
    $.ajax({
      url: '/removemarkerfromlist',
      type: 'POST',
      dataType: 'json',
      data: {
          User: getUsername(),
          ListName:_listname
      },
      success: function(){
        $('#tagItemModal').modal('toggle');
      }
    });
  }
}
  // select2js------------------------------------

function redirecttodatamanager(){
  window.location.assign(EnvironmentUrl+'/managelandmarks');
}

function refreshTagListView(e){
  var data;
  if (e === undefined){
    data = {id:$('#usertaglists').val()};
  }else{
    data = e.params.data; // {id:<val>,text:<val>}
  }

  $.ajax({
    url: '/retrievelist',
    type: 'POST',
    dataType: 'json',
    data: {
      usrname:getUsername(),
      listname: data.id
    },
    success: function (data){
      // render text results in template
      var results = "";
      data.items.forEach( (el, i)=>{
        var content = '<div class="row">'+
                      '<div class="col-md-12 col-sm-12 col-lg-12">'+
                      '<h3>'+el.Title+'</h3>'+
                      '<div class="float-right"><button class="btn btn-danger" id="tagitemremovebutton" item-list="'+data.ListName+'" item-name="'+el.Title+'" onclick="removeitemfromlist(this);">Delete</button></div><br>'+
                      '<p>'+el.Description+'</p>'+
                      '</div>'+
                      '</div>'+
                      '<hr/>';
        results += content;
      });

      if (data.items.length == 0){
        results = '<div class="row">'+
                      '<div class="col-md-12 col-sm-12 col-lg-12">'+
                      '<h3> No Tags Present</h3>'+
                      '</div>'+
                      '</div>'+
                      '<hr/>';
      }

      $('#usertaglistview').html(results);
    }
  });
}

// Liability Agreement
function promptLiabilityAgreement(){
    if (document.getElementById('usr'))
    document.getElementById('agreement').style.display='block'
}

function closeAgreement(){
  document.getElementById('agreement').style.display='none'
}

function removeTagList(){
  var data = {id:$('#usertaglists').val()};
  if (data){
      $.ajax({
        url: '/removeuserlist',
        type: 'POST',
        dataType: 'json',
        data: {
          User:getUsername(),
          NameOfList: data.id
        },
        success: function (data){
          // render text results in template
          if (data == '0'){
            alert('Error in deleting list!');
          }

          var results = '<div class="row">'+
                        '<div class="col-md-12 col-sm-12 col-lg-12">'+
                        '<h3> ...Select list to show tagged markers...</h3>'+
                        '</div>'+
                        '</div>'+
                        '<hr/>';

          $('#usertaglistview').html(results);
          $('#usertaglists').val(null).trigger('change');
        }
      });
  }
}

function removeitemfromlist(el){

  var itemtitle = $(el).attr('item-name');
  var itemlist = $(el).attr('item-list');

  $.ajax({
    url: '/removemarkerfromlist',
    type: 'POST',
    dataType: 'json',
    data: {
      User:getUsername(),
      NameOfList: itemlist,
      ItemTitle: itemtitle
    },
    success: function (data){
      if (data == '0'){
        alert('Error in deleting item from list!');
      }

      refreshTagListView();
    }
  });
}
</script>
<%- include('shared/footer')  %>
</body>

</html>
